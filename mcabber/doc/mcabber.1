.\"Generated by db2man.xsl. Don't modify this, modify the source.
.de Sh \" Subsection
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.TH "MCABBER" 1 "" "" ""
.SH NAME
mcabber \- a simple Jabber console client
.SH "SYNOPSIS"


mcabber [ \-f configfile ] [ --help | \-h ]

.SH "DESCRIPTION"


mcabber(1) is a small Jabber console client\&. For now it needs a configuration file to start, so please copy the sample mcabberrc file and adapt your connection settings\&.


You also need to have an existing Jabber account to use this software, as it cannot (un)register accounts yet\&.


The mcabber(1) screen is divided into 4 regions\&. The \fIroster\fR, alias \fIbuddylist\fR, is on the left\&. The \fIchat window\fR, or chat buffer, is on the right\&. The \fIinput line\fR lies at the bottom of the screen, under a small \fIlog window\fR\&.


To display buddies chat buffers, you will have to enter \fIchat mode\fR\&. You can enter chat mode by pressing enter, and leave chat mode with the ESC key\&. Simply sending a message will also enable chat mode\&.


Here are some of the features of mcabber:

.TP 3
\(bu
 SSL support\&.
.TP
\(bu
 History logging: If enabled (see the CONFIGURATION FILE section), mcabber(1) can save discussions to history log files\&.
.TP
\(bu
 Commands completion: If possible, mcabber(1) will try to complete your command line if you hit the Tab key\&.
.TP
\(bu
 External actions: Some events (like receiving a message) can trigger an external action, for example a shell script (you need to enable it in your configuration file)\&.
.LP

.SH "OPTIONS"

.TP
\-\-help, \-h
Quick help usage message

.TP
\-f configfile
Use configuration file configfile 

.SH "KEYS"


Text typing occurs in the \fIinput line\fR; basic operations are supported (left arrow, right arrow, home/end keys, insert, delete, backspace...)\&.


PageUp and PageDown keys are used to move in the roster\&.


To send a message, move to the choosen buddy in the buddylist, type your message and hit enter\&. If the line begins with a slash, this will be interpreted as a command (see the COMMAND section below)\&. Hit escape to leave the chat mode\&.

Here is a quick description of the key bindings:

Ctrl\-a		Go to the beginning of the input line

Ctrl\-e		Go to the end of the input line

Ctrl\-l		Force a resize

PgUp/PgDown	Move inside the roster (buddylist)

Tab			Complete current word, in the input line

Ctrl\-g		Cancel completion / ctrl\-g

Ctrl\-p/Ctrl\-n	Scroll up/down half a screen in the buffer window (chat mode)

Ctrl\-u		Delete from beginning of the line to the cursor

Ctrl\-k		Delete from the cursor to the end of line

Ctrl\-w		Backward kill word

Ctrl\-t		Transpose chars

Ctrl\-o		Accept line and put the next history line in the input line (accept\-line\-and\-down\-history)

Ctrl\-q		Jump to the next unread message


.SH "COMMANDS"

.TP
\fB/add\fR jid [nickname]
Add the jid Jabber user to our roster (default group), and send a notification request to this buddy\&. If no nickname is specified, the jid is used\&.

.TP
\fB/alias\fR name = command line
Add "name" as an alias for "command line"\&. Aliases are expanded only once, thus they can not be chained\&. "/alias name" displays the value associated with the "name" alias; "/alias name =" unsets the "name" alias\&. Example: "/alias away = status away"\&.

.TP
\fB/bind\fR keycode = command line
Bind a command line to the key with the "keycode" code number\&. Keycodes of unused keys are displayed by mcabber in the log window when pressing the key, for example "Unknown key=265"\&. "/bind keycode" displays the command line bound to the given keycode; "/bind keycode" unbinds the given keycode\&. Note: aliases can be used in key bindings\&. Example: "/bind 265 = status online" (265 is F1 for me, but it can depend on your ncurses installation)\&.

.TP
\fB/buffer\fR clear|top|bottom
The buffer command manipulates the current buddy's buffer (chat window)\&.

 \fBclear\fR	clear the current buddy chat window
 \fBtop\fR 	jump to the top of the current buddy chat buffer
 \fBbottom\fR	jump to the bottom of the current buddy chat buffer

.TP
\fB/clear\fR
The clear command is actually an alias for "/buffer clear"\&.

.TP
\fB/connect\fR
Establish connection to the Jabber server\&.

.TP
\fB/del\fR
Delete the current buddy from our roster, unsubscribe from its presence notification and unsubscribe it from ours\&.

.TP
\fB/disconnect\fR
Terminate connection to the Jabber server\&. Note: the roster is only available when the connection to the server is active, so the buddylist is empty when disconnected\&.

.TP
\fB/group\fR fold|unfold|toggle
The group command changes the current group display\&.

 \fBfold\fR	fold (shrink) the current group tree in the roster
 \fBunfold\fR	unfold (expand) the current group tree in the roster
 \fBtoggle\fR	toggle the state (fold/unfold) of the current tree

.TP
\fB/info\fR
Display info on the selected entry (user, agent, group...)\&.

.TP
\fB/move\fR [groupname]
Move the current buddy to the requested group\&. If no group is specified, then the buddy is moved to the default group\&. This command only works with users (not agents), at the moment\&.

.TP
\fB/msay\fR begin|verbatim|send|abort
Send a multi\-line message\&. To write a single message with several lines, the \fImulti\-line mode\fR should be used\&. In multi\-line mode, each line (except command lines) typed in the input line will be added to the multi\-line message\&. Once the message is finished, it can be sent to the current selected buddy with the "msay /send" command\&. The \fIverbatim\fR multi\-line mode disables commands, so that it is possible to enter lines starting with a slash\&. Only the "/msay" command (with send or abort parameters) can be used to exit verbatim mode\&.

 \fBbegin\fR	enter multi\-line mode
 \fBverbatim\fR	enter verbatim multi\-line mode
 \fBsend\fR	send the current multi\-line message to the currently selected buddy
 \fBabort\fR	leave multi\-line mode without sending the message

.TP
\fB/rename\fR nickname
Rename current buddy to the given nickname\&. This command does not work for groups, at the moment (but you can move the buddies to another group with the /move command)\&.

.TP
\fB/roster\fR
The roster command manipulates the roster/buddylist\&.  Here are the available parameters:

 \fBbottom\fR     	jump to the bottom of the roster
 \fBtop\fR        	jump to the top of the roster
 \fBhide_offline\fR	hide offline buddies
 \fBshow_offline\fR	show offline buddies
 \fBtoggle_offline\fR	toggle display of offline buddies
 \fBsearch\fR bud	search for a buddy with a name or buddy containing "bud" (only in the displayed buddylist)
 \fBalternate\fR	jump to alternate buddy\&. The "alternate" buddy is the last buddy left while being in chat mode (this command is thus especially useful after commands like "/roster unread_first")
 \fBunread_first\fR	jump to the first unread message
 \fBunread_next\fR	jump to the next unread message

.TP
\fB/say\fR text
Send the text message to the currently selected buddy\&. Can be useful if you want to send a message beginning with a slash, for example\&.

.TP
\fB/status\fR [online|avail|invisible|free|dnd|notavail|away [StatusMessage]]
Set the current status\&. If no status is specified, display the current status\&. If a status message is specified, it will overrride the message* variables\&.

.SH "CONFIGURATION FILE"


See the provided sample configuration file, which should be self\-documented\&.

.SH "FILES"


The following files can be used by mcabber(1):

.nf

$HOME/\&.mcabber/mcabberrc    Default configuration file
$HOME/\&.mcabberrc            Configuration file used if no other has been found
$HOME/\&.mcabber/histo/       Default directory for storing chat history files, if enabled

.fi

.SH "BUGS"


Certainly\&. Please tell me if you find one! :\-)

.SH "AUTHOR"


Written by Mikael BERTHE <\fImcabber@lilotux.net\fR>\&.
Originally based on cabber (Cabber homepage: <\fIhttp://cabber.sourceforge.net\fR>), please consult the AUTHORS file for details\&.

.SH "RESOURCES"


Main web site: <\fIhttp://www.lilotux.net/~mikael/mcabber/\fR>

.SH "COPYING"


Copyright (C) 2005 Mikael Berthe\&.

Some portions are Copyright (C) 2002\-2004 <cabber@ajmacias\&.com>\&.


Free use of this software is granted under the terms of the GNU General Public License (GPL)\&.

